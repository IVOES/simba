#
# @file make/app.sconscript
# @version 1.0
#
# @section License
# Copyright (C) 2014-2015, Erik Moqvist
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# This file is part of the Simba project.
#

import os

def add_phony_targets(env, **kwargs):
    for target, (action, depends) in kwargs.items():
        env.AlwaysBuild(env.Alias(target, depends, action))

env = DefaultEnvironment()

# default values
if "BOARD" in ARGUMENTS:
    env["BOARD"] = ARGUMENTS.get("BOARD")

env.Replace(RUNLOG=Dir("#").abspath + "/run.log")
env.Replace(EXE=Dir("#").abspath + "/" + env["NAME"] + ".out")
env.Replace(RUNSCRIPT="$SIMBA_ROOT/make/$TOOLCHAIN/${ARCH}.py")
env.Replace(RUN_END_PATTERN="harness report: total\(\d+\), passed\(\d+\), failed\(\d+\)")
env.Replace(RUN_END_PATTERN_SUCCESS="harness report: total\(\d+\), passed\(\d+\), failed\(0\)")

env.Append(CCFLAGS=[])

SConscript("app_common.sconscript")

# Build the application
exe = env.Program(env["EXE"], env["OBJS"])

# Run the application
run_command = ("python -u $RUNSCRIPT run $EXE $SIMBA_ROOT $RUNLOG "
               "\"$RUN_END_PATTERN\" \"$RUN_END_PATTERN_SUCCESS\" "
               "$RUNARGS"
)
add_phony_targets(env, run=(run_command, [exe]))

Default([exe])
